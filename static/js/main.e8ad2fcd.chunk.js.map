{"version":3,"sources":["lib/open-window.ts","lib/fingers.ts","components/hand/svg-paths.tsx","components/hand/index.tsx","components/hands-binary.tsx","components/hands-love-hate.tsx","lib/params.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["openWindow","fingersThumbToLittle","fingersLittleToThumb","indexOfFingerOnLeft","name","indexOf","indexOfFingerOnRight","fingerTitle","fingerPaths","thumb","index","middle","ring","little","rightStyle","transform","circleX","Hand","props","isRight","title","fingers","flipHand","fiveFingers","className","viewBox","xmlns","fillRule","clipRule","strokeLinecap","strokeLinejoin","strokeMiterlimit","map","value","onClick","isExtended","extended","onMouseDown","cx","cy","r","opacity","cursor","stroke","style","undefined","d","fill","strokeOpacity","finger","isClosed","closedFingerPath","extendedFingerPath","cn","disabled","label","String","x","y","fontFamily","fontSize","textAnchor","dominantBaseline","pointerEvents","HandsBinary","hideControls","_maxValue","maxValue","fingersRequired","toString","length","values","Array","_","i","handsRequired","Math","ceil","allHands","reverse","useState","total","setTotal","handIndex","startingFingerIndex","getFinger","localIndex","Boolean","type","onChange","e","Number","target","min","max","HandsLoveHate","closed","setClosed","window","closeWindow","close","w","open","opener","App","params","URLSearchParams","document","location","search","get","maxBinaryValueParam","parseInt","maxBinaryValue","isNaN","getParams","parent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e8ad2fcd.chunk.js","sourcesContent":["let openWindow: Window | null;\n\nexport interface ICustomWindow extends Window {\n  closeWindow?: () => void;\n}\n\nexport const setCloseTarget = (w: Window | null) => {\n  openWindow = w;\n};\n\nconst customWindow: ICustomWindow = window;\n\ncustomWindow.closeWindow = () => {\n  openWindow?.close();\n};\n","export type FingerNames = \"thumb\" | \"index\" | \"middle\" | \"ring\" | \"little\";\n\nexport const fingersThumbToLittle: Array<FingerNames> = [\n  \"thumb\",\n  \"index\",\n  \"middle\",\n  \"ring\",\n  \"little\",\n];\n\nexport const fingersLittleToThumb: Array<FingerNames> = [\n  \"little\",\n  \"ring\",\n  \"middle\",\n  \"index\",\n  \"thumb\",\n];\n\nexport const indexOfFingerOnLeft = (name: FingerNames) => {\n  return fingersThumbToLittle.indexOf(name);\n};\n\nexport const indexOfFingerOnRight = (name: FingerNames) => {\n  return fingersLittleToThumb.indexOf(name);\n};\n\nexport const fingerTitle = (name: FingerNames) => {\n  switch (name) {\n    case \"thumb\":\n      return \"Thumb\";\n    case \"index\":\n      return \"Index\";\n    case \"middle\":\n      return \"Middle\";\n    case \"ring\":\n      return \"Ring\";\n    case \"little\":\n      return \"Little\";\n  }\n};\n\nexport const binaryToFingerCount = (value: number) => {\n  return value.toString(2).length;\n};\n\nexport const binaryHandCount = (value: number) => {\n  const fingerCount = binaryToFingerCount(value);\n  return Math.ceil(fingerCount / 5);\n};\n\nexport const handToFingersBinary = (hand: number) => {\n  return [0, 1, 2, 3, 4].map((v) => 2 ** (v + hand * 5));\n};\n\nexport const handToFingersDecimal = (hand: number) => {\n  return [1, 2, 3, 4, 5].map((v) => v + hand * 5);\n};\n","import { FingerNames } from \"../../lib/fingers\";\n\nexport const fingerPaths: Record<FingerNames, [string, string]> = {\n  thumb: [\n    \"M73.935 316.755a415.412 415.412 0 00-4.526-4.459 109.184 109.184 0 01-30.405-53.451c-5.355-22.6-11.497-48.632-12.534-53.028a5.012 5.012 0 00-.468-1.229L7.435 170.239a1.505 1.505 0 01-.023-1.386 1.505 1.505 0 011.121-.814h.004a30.123 30.123 0 0128.568 11.716l10.108 13.477 19.139 22.591s62.451 14.252 62.451 60.087\",\n    \"M73.935 316.763a662.15 662.15 0 00-1.2-1.196 109.207 109.207 0 01-31.222-62.27c-.805-5.676-1.614-11.41-2.375-16.801a27.81 27.81 0 0124.621-31.539l12.172-1.283 17.329-2.599a2.765 2.765 0 013.115 2.156v.001a26.448 26.448 0 01-11.127 27.503l-12.504 8.388s56.059-9.04 56.059 36.795\",\n  ],\n  index: [\n    \"M66.631 187.095L59.66 74.688a5.001 5.001 0 013.58-5.106l7.805-2.295a4.996 4.996 0 016.335 3.932l18.129 103.337.033.116\",\n    \"M101.336 167.973a10 10 0 00-5.256-7.887l-5.279-2.81a14.999 14.999 0 00-19.082 4.284l-4.349 5.843a9.999 9.999 0 00-1.877 7.393l4.922 34.251 8.316 21.993a9.999 9.999 0 009.752 6.455l5.652-.225a10.001 10.001 0 009.543-8.907c.827-6.573 1.733-15.409 1.278-20.874-.807-9.694-2.705-29.872-3.62-39.516z\",\n  ],\n  middle: [\n    \"M105.585 172.312l3.675-115.763a4.999 4.999 0 014.997-4.841h10.319a5 5 0 014.997 4.835l3.754 113.782\",\n    \"M138.899 168.375a9.998 9.998 0 00-3.482-7.914l-5.547-4.76a15 15 0 00-19.256-.234l-5.445 4.446a10.004 10.004 0 00-3.645 8.524c.733 9.498 2.322 29.496 3.432 39.052.662 5.69 1.994 16.175 2.959 23.689a10 10 0 009.948 8.738l6.687-.019a9.999 9.999 0 009.794-8.123c1.536-7.348 3.54-17.826 3.564-23.267.047-10.46.685-30.863.991-40.132z\",\n  ],\n  ring: [\n    \"M142.179 171.059l15.403-103.46a4.999 4.999 0 016.09-4.131l7.72 1.816a5 5 0 013.852 5.035l-3.632 108.116\",\n    \"M176.527 176.598a10.002 10.002 0 00-2.811-9.123l-6.713-6.567a14.999 14.999 0 00-17.364-2.609l-5.174 2.668a10 10 0 00-5.405 8.385c-.519 9.828-1.464 29.683-1.152 39.155.167 5.071.637 14.639 1.007 21.893a10 10 0 0010.018 9.512l4.814-.015a9.998 9.998 0 009.572-7.208c2.074-6.985 5.064-17.281 6.246-22.534 1.865-8.288 5.243-24.991 6.962-33.557z\",\n  ],\n  little: [\n    \"M179.955 182.04l26.739-73.594a5 5 0 016.381-3.001l5.127 1.831a5 5 0 013.19 5.833l-19.136 82.947\",\n    \"M204.441 193.204c.861-2.278.862-4.791.002-7.07l-3.318-8.785a11.072 11.072 0 00-11.294-7.12l-4.961.42a10 10 0 00-8.922 7.816c-2.006 8.944-5.278 23.962-6.383 31.69-.552 3.862-1.216 10.169-1.758 15.694a9.997 9.997 0 009.976 11.053c.785-.001 1.56-.003 2.305-.006a10 10 0 009.076-5.875l5.927-13.09 9.35-24.727z\",\n  ],\n};\n","import React, { Fragment, ReactElement } from \"react\";\nimport {\n  fingersThumbToLittle,\n  fingersLittleToThumb,\n  fingerTitle,\n} from \"../../lib/fingers\";\nimport \"./style.css\";\nimport cn from \"classnames\";\nimport { fingerPaths } from \"./svg-paths\";\n\nconst rightStyle = { transform: `scale(-1, 1) translate(-100%)` };\n\nconst circleX = [23.891, 71.674, 119.456, 167.238, 215.021];\n\ntype Finger<V> = { value: V; extended: boolean; onClick?: () => void };\n\ninterface Props<V> {\n  thumb?: Finger<V>;\n  index?: Finger<V>;\n  middle?: Finger<V>;\n  ring?: Finger<V>;\n  little?: Finger<V>;\n\n  isRight?: boolean;\n  title?: string;\n}\n\nconst Hand = <V extends unknown>(props: Props<V>): ReactElement => {\n  const { isRight, title = \"Hand\", ...fingers } = props;\n\n  const flipHand = isRight;\n\n  const fiveFingers = isRight ? fingersLittleToThumb : fingersThumbToLittle;\n\n  return (\n    <svg\n      className=\"hand\"\n      viewBox=\"0 0 239 360\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeMiterlimit={1.5}\n    >\n      <title>{title}</title>\n      <g>\n        {fiveFingers.map((name, index) => {\n          const value = fingers[name];\n          const onClick = value?.onClick;\n          const isExtended = value?.extended;\n\n          return (\n            <Fragment key={index}>\n              <circle\n                onMouseDown={onClick}\n                cx={circleX[index]}\n                cy={20}\n                r={17.474}\n                className={isExtended ? \"highlight\" : \"lowlight\"}\n              />\n              <circle\n                onMouseDown={onClick}\n                cx={circleX[index]}\n                cy={20}\n                r={17.474}\n                opacity={0}\n                cursor=\"pointer\"\n              >\n                <title>\n                  {fingerTitle(name)} Finger {index}\n                </title>\n              </circle>\n            </Fragment>\n          );\n        })}\n\n        {/* Hand */}\n        <g stroke=\"#000\" style={flipHand ? rightStyle : undefined}>\n          {/* Palm */}\n          <path d=\"M133.238 167.627l.123 3.721a4.409 4.409 0 004.406 4.262h.002a4.328 4.328 0 004.282-3.692l.525-3.526a121.092 121.092 0 0129.132 7.183l-.183 5.447a4.168 4.168 0 003.022 4.149s0 0 0 0a4.315 4.315 0 005.242-2.676l1.09-2.999a120.634 120.634 0 0122.046 13.658l-1.385 6.004a4.997 4.997 0 00-.129 1.156c.098 20.642 5.002 32.816 5.002 61.573 0 42.834-34.776 77.61-77.61 77.61-21.417 0-40.82-8.694-54.868-22.742-14.048-14.048-22.742-33.451-22.742-54.868 0-17.656 5.908-33.944 15.854-46.989l.361-14.975a4.74 4.74 0 00-.008-.43l-.955-15.4a119.832 119.832 0 0128.617-12.087l.447 2.55a5.001 5.001 0 006.01 4.017l.105-.023a5 5 0 003.912-4.723l.136-4.269c7.224-1.368 14.678-2.064 22.294-2.064l5.272.133z\" />\n          {/* Wrinkle */}\n          <path\n            d=\"M79.254 191.904c14.885-7.571 31.725-11.821 49.549-11.821 22.691 0 43.787 6.888 61.308 18.691\"\n            fill=\"none\"\n            strokeOpacity={0.2}\n          />\n          {fingersLittleToThumb.map((name, index) => {\n            const finger = fingers[name];\n            const value = finger?.value ?? \"\";\n            const onClick = finger?.onClick;\n            const isExtended = finger?.extended ?? false;\n            const isClosed = !isExtended;\n\n            const closedFingerPath = fingerPaths[name][0];\n            const extendedFingerPath = fingerPaths[name][1];\n\n            return (\n              <g\n                key={index}\n                onMouseDown={onClick}\n                className={cn({ isExtended, isClosed })}\n              >\n                <path d={closedFingerPath}>\n                  <title>\n                    {fingerTitle(name)} Finger {value}\n                  </title>\n                </path>\n                <path d={extendedFingerPath}>\n                  <title>\n                    {fingerTitle(name)} Finger {value}\n                  </title>\n                </path>\n              </g>\n            );\n          })}\n        </g>\n\n        {/* Labels */}\n        <g>\n          {fiveFingers.map((name, index) => {\n            const value = fingers[name]?.value;\n            const disabled = fingers[name]?.onClick === undefined;\n            const label = value ? String(value) : \"\";\n            return (\n              <text\n                opacity={disabled ? 0.2 : 1}\n                key={index}\n                x={circleX[index]}\n                y={20}\n                fontFamily=\"sans-serif\"\n                fontSize={11}\n                textAnchor=\"middle\"\n                dominantBaseline=\"central\"\n                pointerEvents=\"none\"\n              >\n                {label}\n              </text>\n            );\n          })}\n        </g>\n      </g>\n    </svg>\n  );\n};\n\nexport { Hand };\n","import React, { FC, useState } from \"react\";\nimport { Hand } from \"./hand\";\nimport \"./hands.css\";\nimport {\n  FingerNames,\n  indexOfFingerOnLeft,\n  indexOfFingerOnRight,\n} from \"../lib/fingers\";\n\ninterface Props {\n  hideControls?: boolean;\n  maxValue?: number;\n}\n\nconst HandsBinary: FC<Props> = (props) => {\n  const { hideControls, maxValue: _maxValue } = props;\n  const maxValue = _maxValue ?? 2 ** 10 - 1;\n\n  const fingersRequired = maxValue.toString(2).length;\n\n  const values = Array(fingersRequired)\n    .fill(null)\n    .map((_, i) => 2 ** i);\n\n  const handsRequired = Math.ceil(fingersRequired / 5);\n\n  const allHands = Array(handsRequired)\n    .fill(1)\n    .map((_, i) => i)\n    .reverse();\n\n  const [total, setTotal] = useState(maxValue);\n\n  const onClick = (value: number) => {\n    setTotal(total ^ value);\n  };\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTotal(Number(e.target.value));\n  };\n\n  return (\n    <>\n      <section>\n        <article>\n          {allHands.map((handIndex) => {\n            const startingFingerIndex = handIndex * 5;\n            const isRight = handIndex % 2 === 1;\n\n            const getFinger = (finger: FingerNames) => {\n              const localIndex = isRight\n                ? indexOfFingerOnRight(finger)\n                : indexOfFingerOnLeft(finger);\n              const value = values[localIndex + startingFingerIndex];\n              return {\n                value,\n                extended: Boolean(value & total),\n                onClick: () => onClick(value),\n              };\n            };\n\n            return (\n              <Hand\n                isRight={!isRight}\n                key={handIndex}\n                title={`Hand ${handIndex}`}\n                thumb={getFinger(\"thumb\")}\n                index={getFinger(\"index\")}\n                middle={getFinger(\"middle\")}\n                ring={getFinger(\"ring\")}\n                little={getFinger(\"little\")}\n              />\n            );\n          })}\n        </article>\n      </section>\n      {!hideControls && (\n        <footer>\n          <label>\n            <input\n              type=\"number\"\n              value={total}\n              onChange={onChange}\n              min={0}\n              max={maxValue}\n            />\n          </label>\n        </footer>\n      )}\n    </>\n  );\n};\n\nexport { HandsBinary };\n","import React, { FC, useState } from \"react\";\nimport { Hand } from \"./hand\";\nimport \"./hands.css\";\nimport {\n  FingerNames,\n  indexOfFingerOnLeft,\n  indexOfFingerOnRight,\n} from \"../lib/fingers\";\n\nconst HandsLoveHate: FC = () => {\n  const leftFingers = [\"❤️️\", \"L\", \"O\", \"V\", \"E\"];\n  const rightFingers = [\"H\", \"A\", \"T\", \"E\", \"🖤\"];\n  const values = [...leftFingers, ...rightFingers];\n\n  const allHands = [0, 1];\n\n  const [closed, setClosed] = useState<number | undefined>(undefined);\n\n  const onClick = (index: number) => {\n    setClosed(index);\n  };\n\n  return (\n    <>\n      <section>\n        <article>\n          {allHands.map((handIndex) => {\n            const startingFingerIndex = handIndex * 5;\n            const isRight = handIndex % 2 === 1;\n\n            const getFinger = (finger: FingerNames) => {\n              const localIndex = isRight\n                ? indexOfFingerOnRight(finger)\n                : indexOfFingerOnLeft(finger);\n              const value = values[localIndex + startingFingerIndex];\n              return {\n                value,\n                extended: closed !== undefined ? handIndex === closed : true,\n                onClick: () => onClick(handIndex),\n              };\n            };\n\n            return (\n              <Hand\n                isRight={isRight}\n                key={handIndex}\n                title={`Hand ${handIndex}`}\n                thumb={getFinger(\"thumb\")}\n                index={getFinger(\"index\")}\n                middle={getFinger(\"middle\")}\n                ring={getFinger(\"ring\")}\n                little={getFinger(\"little\")}\n              />\n            );\n          })}\n        </article>\n      </section>\n    </>\n  );\n};\n\nexport { HandsLoveHate };\n","export interface Params {\n  type?: string;\n  maxBinaryValue?: number;\n  hideControls: boolean;\n}\n\nexport const getParams = (): Params => {\n  const params = new URLSearchParams(document.location.search);\n  const type = params.get(\"type\") ?? undefined;\n\n  const maxBinaryValueParam = parseInt(params.get(\"maxBinaryValue\") ?? \"\");\n  const maxBinaryValue = Number.isNaN(maxBinaryValueParam)\n    ? undefined\n    : maxBinaryValueParam;\n\n  const hideControls = params.get(\"hideControls\") ? true : false;\n\n  return { type, maxBinaryValue, hideControls };\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { HandsBinary } from \"./components/hands-binary\";\nimport { HandsLoveHate } from \"./components/hands-love-hate\";\nimport { ICustomWindow, setCloseTarget } from \"./lib/open-window\";\nimport { getParams } from \"./lib/params\";\n\nconst openWindow = () =>\n  setCloseTarget(window.open(\"../finbin?hideControls=true\"));\n\nconst closeWindow = window.opener\n  ? () => {\n      const opener: ICustomWindow = window.opener;\n      opener.closeWindow?.();\n    }\n  : null;\n\nconst App = () => {\n  const { type, hideControls, maxBinaryValue } = getParams();\n\n  switch (type) {\n    case \"love-hate\":\n      return (\n        <div className=\"App\">\n          <HandsLoveHate />\n        </div>\n      );\n    default:\n    case \"binary\":\n      return (\n        <div className=\"App\">\n          <HandsBinary hideControls={hideControls} maxValue={maxBinaryValue} />\n          <footer>\n            {closeWindow && (\n              <button\n                title=\"Close Window\"\n                className=\"windowAction -close\"\n                type=\"button\"\n                onClick={closeWindow}\n              >\n                ✗\n              </button>\n            )}\n            {window.location !== window.parent.location && (\n              <button\n                title=\"Open in New Window\"\n                className=\"windowAction -open\"\n                type=\"button\"\n                onClick={openWindow}\n              >\n                ↗\n              </button>\n            )}\n          </footer>\n        </div>\n      );\n  }\n};\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}